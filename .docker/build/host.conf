upstream php {
    server 127.0.0.1:9001;
    server 127.0.0.1:9002;
    server 127.0.0.1:9003;
}

server {
    # handle redirects for load balancers
    #if ($http_x_forwarded_proto != 'https' && $host != 'localhost') {
    #   return 301 https://$host$request_uri;
    #}

    listen       80;
    ## listen for ipv6
    listen   [::]:80 default ipv6only=on;

    server_name  _;
    root /app/public;
    index index.php index.html;

    access_log off;
    error_log /var/log/nginx/app-error.log;

    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    client_max_body_size 20M;

    # proxy should wait long enough for the upstream's proessing before a 504
    proxy_connect_timeout  600s;
    proxy_send_timeout  600s;
    proxy_read_timeout  600s;

    # add_header Access-Control-Allow-Origin *;
    # add_header Access-Control-Allow-Methods 'OPTIONS, HEAD, GET, POST, PUT, DELETE';
    # add_header Access-Control-Allow-Credentials true;
    # add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

    charset utf-8;
    rewrite_log on;
    error_log /var/log/nginx/error.log debug;

    # Rewrites
    if ( $request_uri ~ ^(/about/?)$ ) {
        return 301 $scheme://$http_host;
    }

    if ( $request_uri ~ ^(/product-category|/shop/page/[2-9]+)/? ) {
        return 301 $scheme://$http_host/shop;
    }
    # End rewrites

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|html|svg)$ {
        try_files $uri $uri/ =404;
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { log_not_found off; access_log off; }

    location ~ \.(php)$ {
        fastcgi_split_path_info   ^(.+\.php)(/.*)$;
        include php.conf;
    }

    # Deny .htaccess file access
    location ~ /\.ht {
        deny all;
    }

    location /nginx_status {
        # Turn on nginx stats
        stub_status on;
        # I do not need logs for stats
        access_log   off;
        # Security: Only allow access from 172.17.0.0/16 IP #
        allow 172.17.0.0/16;
        # Send rest of the world to /dev/null #
        deny all;
   }
}
